---
unique_name: 'emrer_demo'
name: 'emrer_example_cluster'
tags:
  - Owner: "bgdnlp"
  - App: "emrer"
release_label: 'emr-4.3.0'
log_uri: 's3://bf-emrer-demo/logs/'
keep_cluster_running: False
ssh_key_name: 'bgdnlp@'


### HARDWARE SECTION - where EC2 instances are set
subnet_id: 'subnet-3ee34c49'
master_security_groups:
  - 'sg-8d2da9e8'
slave_security_groups:
  - 'sg-8c2da9e9'
master_instance_count: 1
core_instance_count: 2
task_instance_count: 0
master_instance_type: 'm1.medium'
slave_instance_type: 'm1.large'
emr_role: 'EMR_DefaultRole'
ec2_role: 'EMR_EC2_DefaultRole'


### APPLICATIONS to be installed on the cluster
applications:
  - Hadoop
  - Hive


### CONFIGURATIONS
configurations:
  - dir: 'cluster_configs'
  # inline config example
  - Classification: hadoop-log4j
    Properties:
       "hadoop.root.logger": "WARN,console"
       "hdfs.audit.logger": "WARN,NullAppender"
       "mapred.audit.logger": "WARN,NullAppender"
       "log4j.logger.emr": "WARN" 


### BOOTSTRAP ACTIONS - executed in the order in which they are defined
bootstrap_s3bucket: 'bf-emrer-demo'
bootstrap_s3prefix: 'bootstrap_actions/'
bootstrap_actions:
  - command: >
        sudo sh -c "echo '%wheel ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers"
  - dir: 'os_setup'
    # Bad example, but the argument defined here will be inherited by all
    # scripts in the os_setup directory. Only one of them is actually using
    # it though. It works, but it's really not good practice. This is
    # just an example, shouldn't do that in the real world
    args:
      - 'bf-emrer-demo/ansible-2.0.1.0/'
  - name: 'cloudfront sample data setup'
    script: cloudfront_data_setup.sh
    args:
      - 'bf-emrer-demo'
    s3prefix: 'cloudfront/'
    name_on_s3: data_setup.sh


### STEPS - executed in the order they are defined
steps_s3bucket: 'bf-emrer-demo'
steps_s3prefix: 'steps/'
steps:
  - name: 'Hive_CloudFront'
    on_failure: terminate
    type: hive
    s3: eu-west-1.elasticmapreduce.samples/cloudfront/code/Hive_CloudFront.q
    args:
      - input: s3://bf-emrer-demo
      - output: s3://bf-emrer-demo/output/
  - name: 'script_step_touch'
    type: shell
    script: 'emr_launch_test_step_touch /tmp/file'
    name_on_s3: '_random_'
